// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Project.DbModels;
using System;

namespace Project.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20171023174346_A")]
    partial class A
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Project.DbModels.ActiveDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datetime");

                    b.Property<int?>("PairId");

                    b.HasKey("Id");

                    b.HasIndex("PairId");

                    b.ToTable("ActiveDevices");
                });

            modelBuilder.Entity("Project.DbModels.ConnectionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datetime");

                    b.Property<int?>("PairId");

                    b.HasKey("Id");

                    b.HasIndex("PairId");

                    b.ToTable("ConnectionHistories");
                });

            modelBuilder.Entity("Project.DbModels.Device", b =>
                {
                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Address");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Project.DbModels.Pair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DeviceAddress");

                    b.Property<string>("FriendlyName");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DeviceAddress");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Pairs");
                });

            modelBuilder.Entity("Project.DbModels.Scanner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datetime");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("Scanners");
                });

            modelBuilder.Entity("Project.DbModels.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessLevel");

                    b.Property<DateTime>("Datetime");

                    b.Property<string>("Email");

                    b.Property<string>("Lastname");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int?>("ScannerId");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("ScannerId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Project.DbModels.ActiveDevice", b =>
                {
                    b.HasOne("Project.DbModels.Pair", "Pair")
                        .WithMany("ActiveDevices")
                        .HasForeignKey("PairId");
                });

            modelBuilder.Entity("Project.DbModels.ConnectionHistory", b =>
                {
                    b.HasOne("Project.DbModels.Pair", "Pair")
                        .WithMany("ConnectionHistories")
                        .HasForeignKey("PairId");
                });

            modelBuilder.Entity("Project.DbModels.Pair", b =>
                {
                    b.HasOne("Project.DbModels.Device", "Device")
                        .WithMany("Pairs")
                        .HasForeignKey("DeviceAddress");

                    b.HasOne("Project.DbModels.User", "User")
                        .WithOne("Pair")
                        .HasForeignKey("Project.DbModels.Pair", "UserId");
                });

            modelBuilder.Entity("Project.DbModels.User", b =>
                {
                    b.HasOne("Project.DbModels.Scanner", "Scanner")
                        .WithOne("User")
                        .HasForeignKey("Project.DbModels.User", "ScannerId");
                });
#pragma warning restore 612, 618
        }
    }
}
